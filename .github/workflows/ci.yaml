name: Continuous Integration Pipeline
on:
  push:
    branches:
    - main
    tags:
    - "*"
  pull_request:
    branches:
    - main
    paths-ignore:
    - "**/*.md"
    - docs/**
    - examples/**

env:
  GORELEASER_VERSION: v2.3.2
jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      with:
        show-progress: false
    - name: Setup Golang
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
      with:
        go-version-file: go.mod
        cache: false
    - name: Set golangci-lint Cache Key
      id: create-sha
      run: |
        echo "GOLANGCILINT_SHA=$(cat ./tools/GOLANGCI_LINT_VERSION | sha256sum - | awk '{ print $1 }')" >> $GITHUB_ENV
    - name: Setup golangci-lint Cache
      uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
      with:
        path: |
          ./tools/bin
        key: ${{ runner.os }}-go-${{ env.GOLANGCILINT_SHA }}
        restore-keys: |
          ${{ runner.os }}-go-${{ env.GOLANGCILINT_SHA }}
    - name: Run Lint CI
      run: make ci-lint GOLANGCI_LINT_MODE="github-actions"

  test:
    name: Testing on ${{ matrix.os }}
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
    runs-on: ${{ matrix.os }}
    env:
      GOEXPERIMENT: nocoverageredesign
    steps:
    - name: Checkout Repository
      uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      with:
        show-progress: false
    - name: Setup Golang
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
      with:
        go-version-file: go.mod
    - name: Run Test Coverage
      run: make ci

  conformance-test:
    name: Testing against Kubernetes ${{ matrix.k8s_version }}
    runs-on: ubuntu-latest
    needs:
    - test
    strategy:
      matrix:
        k8s_version:
        - "1.27"
        - "1.28"
        - "1.29"
        - "1.30"
        - "1.31"
    env:
      ENVTEST_K8S_VERSION: ${{matrix.k8s_version}}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      with:
        show-progress: false
    - name: Setup Golang
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
      with:
        go-version-file: go.mod
    - name: Run Conformance Tests
      run: make test-conformance

  publish-release:
    runs-on: ubuntu-latest
    needs:
    - lint
    - conformance-test
    if: github.event_name == 'push'
    steps:
    - name: Checkout Repository
      uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      with:
        show-progress: false
        fetch-depth: 0
    - name: Setup Golang
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
      with:
        go-version-file: go.mod
    - name: Setup Goreleaser
      uses: goreleaser/goreleaser-action@286f3b13b1b49da4ac219696163fb8c1c93e1200 # v6.0.0
      with:
        version: ${{ env.GORELEASER_VERSION }}
        install-only: true
    - name: Set Snapshot Release Environment
      if: github.ref_type == 'branch'
      run: |
        echo "SNAPSHOT_RELEASE=1" >> $GITHUB_ENV
    - name: Run Goreleaser
      run: make ci-release SNAPSHOT_RELEASE=${SNAPSHOT_RELEASE}
      env:
        GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
