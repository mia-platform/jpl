name: Continuous Integration Pipeline
on:
  push:
    branches:
    - main
    tags:
    - "*"
  pull_request:
    branches:
    - main
    paths-ignore:
    - "**/*.md"
    - docs/**
    - examples/**

env:
  GO_VERSION: 1.21.5
  GORELEASER_VERSION: v1.22.1
  GO_CACHE: true
jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        show-progress: false
    - name: Setup Golang
      uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: false
    - name: Set golangci-lint Cache Key
      id: create-sha
      run: |
        echo "GOLANGCILINT_SHA=$(cat ./tools/GOLANGCI_LINT_VERSION | sha256sum - | awk '{ print $1 }')" >> $GITHUB_ENV
    - name: Setup golangci-lint Cache
      uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4.0.0
      with:
        path: |
          ./tools/bin
        key: ${{ runner.os }}-go-${{ env.GOLANGCILINT_SHA }}
        restore-keys: |
          ${{ runner.os }}-go-${{ env.GOLANGCILINT_SHA }}
    - name: Run Lint CI
      run: make ci-lint GOLANGCI_LINT_MODE="github-actions"

  test:
    name: Testing on ${{ matrix.os }} and kubernetes ${{ matrix.k8s_version}}
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        k8s_version:
        - "1.26"
        - "1.27"
        - "1.28"
        # - "1.29"
    runs-on: ${{ matrix.os }}
    env:
      ENVTEST_K8S_VERSION: ${{matrix.k8s_version}}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        show-progress: false
    - name: Setup Golang
      uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
    - name: Run Test Coverage
      run: make ci

  build:
    name: Build for Supported Architectures
    runs-on: ubuntu-latest
    needs:
    - lint
    - test
    if: github.event_name != 'push'
    steps:
    - name: Checkout Repository
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        show-progress: false
    - name: Setup Golang
      uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true
    - name: Setup Goreleaser
      uses: goreleaser/goreleaser-action@7ec5c2b0c6cdda6e8bbb49444bc797dd33d74dd8 # v5.0.0
      with:
        version: ${{ env.GORELEASER_VERSION }}
        install-only: true
    - name: Run Build Multiarchitecture
      run: make build-multiarch
